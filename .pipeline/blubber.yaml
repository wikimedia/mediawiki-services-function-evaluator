version: v4
base: docker-registry.wikimedia.org/nodejs16-slim
lives:
  in: /srv/service
runs:
  environment: { APP_BASE_PATH: /srv/service }

variants:
  build:
    copies:
    - from: local
    apt: { packages: [git, build-essential, python3-dev] }
    # TODO (T318728): When/if we split the services, the evaluator will need 
    # its own checkout of function-schemata.
    node: { requirements: [package.json, package-lock.json, executors/javascript/function-schemata/package.json, executors/javascript/function-schemata/package-lock.json] }
    runs: { environment: { LINK: g++ } }
  development:
    includes: [build]
    apt: { packages: [ca-certificates] }
    entrypoint: [node, server.js]
  test:
    includes: [build]
    apt: { packages: [ca-certificates] }
    entrypoint: [npm, test]
  prep:
    includes: [build]
    node: { env: production }
  production:
    copies: [prep]
    node: { env: production }
    apt: { packages: [python3] }
    entrypoint: [node, server.js]

  build-python3-executor:
    base: docker-registry.wikimedia.org/python3-devel:0.0.2
    apt: { packages: [python3-dev, python3-setuptools, python3-pkgconfig] }
    lives:
      in: /executors/python3
    copies:
    - from: local
      source: executors/python3
      destination: .
    - from: local
      source: test_data
      destination: ./test/test_data
    python:
      version: python3
  test-python3-executor:
    includes: [build-python3-executor]
    lives:
      in: /executors/python3
    python:
      use-system-flag: false
      requirements:
      - from: local
        source: executors/python3/requirements-dev.txt
        destination: ./requirements-dev.txt
    entrypoint: [pytest]

  build-format-python3:
    base: docker-registry.wikimedia.org/python3-build-bullseye
    lives:
      in: /executors/python3
    copies:
    - from: local
      source: executors/python3
      destination: .
  format-python3:
    includes: [build-format-python3]
    lives:
      in: /executors/python3
    python:
      use-system-flag: false
      requirements:
      - from: local
        source: executors/python3/requirements-format.txt
        destination: ./requirements-format.txt
    entrypoint: [sh, "./format.sh"]

  build-javascript-executor:
    lives:
      in: /executors/javascript
    copies:
    - from: local
      source: executors/javascript/
      destination: .
    - from: local
      source: test_data
      destination: ./test/test_data
    node:
      requirements:
      - from: local
        source: executors/javascript/package.json
        destination: ./package.json
      - from: local
        source: executors/javascript/package-lock.json
        destination: ./package-lock.json
      - from: local
        source: executors/javascript/function-schemata/package.json
        destination: ./function-schemata/package.json
      - from: local
        source: executors/javascript/function-schemata/package-lock.json
        destination: ./function-schemata/package-lock.json
  test-javascript-executor:
    includes: [build-javascript-executor]
    lives:
      in: /executors/javascript
    entrypoint: [npm, test]
